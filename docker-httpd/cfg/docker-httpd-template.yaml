apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: docker-httpd
  annotations:
    description: "Dockerfile based httpd demo"
    iconClass: "icon-apache"
labels:
  app: docker-httpd
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    lookupPolicy:
      local: false
    tags: {}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:${APP_VERSION}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: docker-httpd
      git:
        uri: https://github.com/martineg/ocp-labs/
      type: Git
    strategy:
      dockerStrategy: {}
      type: Docker
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: 8000-tcp
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - image: ${APP_NAME}:${APP_VERSION}
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:${APP_VERSION}
      type: ImageChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    port:
      targetPort: 8000-tcp
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
parameters:
  - name: APP_NAME
    value: docker-httpd
    required: true
  - name: APP_VERSION
    value: latest
    required: true

